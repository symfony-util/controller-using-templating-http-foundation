---
sudo: false
language: php

cache:
  directories:
    - $HOME/.composer/cache/files

matrix:
  fast_finish: true
  include:
  - php: 5.4
    env:
    - SYMFONY_VERSION="2.3.*"
  - php: 5.4
    env:
    - SYMFONY_VERSION="2.7.*"
  - php: 5.4
    env:
    - SYMFONY_LTS="2"
  - php: 5.4
    env:
    - SYMFONY_LTS="3"
  - php: 7.2
    env:
    - SYMFONY_LTS="3"

before_install:
- pwd
- echo $HOME
- ls --color $HOME
- echo $TRAVIS_PHP_VERSION
- which composer
- php --ini
- xdebug=/home/travis/.phpenv/versions/$TRAVIS_PHP_VERSION/etc/conf.d/xdebug.ini
- if [[ -f $xdebug ]]; then cat $xdebug; cp $xdebug /tmp; phpenv config-rm xdebug.ini; fi
- xdebug_php=
- if [[ -f /tmp/xdebug.ini ]]; then xdebug_php='-c /tmp/xdebug.ini'; fi
- install --directory .travis/bin # use $HOME instead
- ls --color $HOME
- ls --color ~
- ls --color $HOME/bin
- ls --color ~/bin
- install --directory ~/bin # use $HOME instead
- ls --color $HOME
- ls --color ~
- ls --color $HOME/bin
- ls --color ~/bin

# php-cs-fixer
- if [[ "5.5" < "$TRAVIS_PHP_VERSION" ]]; then wget http://cs.sensiolabs.org/download/php-cs-fixer-v2.phar --output-document=.travis/bin/php-cs-fixer; fi
- if [[ "5.5" < "$TRAVIS_PHP_VERSION" ]]; then php .travis/bin/php-cs-fixer --version; fi

# PHPStan - PHP Static Analysis Tool
# - if [[ "5.6" < "$TRAVIS_PHP_VERSION" ]]; then wget https://github.com/phpstan/phpstan/releases/download/0.9.1/phpstan.phar --output-document=$HOME/bin/phpstan; fi
#^ Needs frequent updates! -> Now with PHPUnit
# - if [[ "5.6" < "$TRAVIS_PHP_VERSION" ]]; then composer global require --dev phpstan/phpstan-shim; fi
# - ls --color ~/.composer
# https://packagist.org/packages/phpstan/phpstan See Install
# https://github.com/symfony/symfony/issues/25459

# PHPUnit (+ PHPStan)
# - if [[ "7.0" < "$TRAVIS_PHP_VERSION" ]]; then wget https://phar.phpunit.de/phpunit-7.0.phar --output-document=$HOME/bin/phpunit; fi # Initial release: February 2, 2018
# - if [[ "5.6" < "$TRAVIS_PHP_VERSION" ]] && [[ "7.1" > "$TRAVIS_PHP_VERSION" ]]; then wget https://phar.phpunit.de/phpunit-6.5.phar --output-document=$HOME/bin/phpunit; fi
# - if [[ "5.6" < "$TRAVIS_PHP_VERSION" ]]; then wget https://phar.phpunit.de/phpunit-6.5.phar --output-document=$HOME/bin/phpunit; fi
# PHP 7.0+ (and -)
# - if [[ "5.6" < "$TRAVIS_PHP_VERSION" ]]; then composer global require --dev phpstan/phpstan-phpunit; else composer global require --dev phpunit/phpunit;fi
- composer --working-dir=scripts require --dev "symfony/process:>=2.3"
- ls -a --color ~
- ls -a --color ~/.composer
# - ls -a --color ~/.composer/vendor
- ls -a --color scripts
- ls -a --color scripts/vendor
- php scripts/testing_dependencies_install.php
- ls -a --color scripts/vendor
- ls -a --color ~/.composer
# PHP 5.6
# - if [[ "5.5" < "$TRAVIS_PHP_VERSION" ]] && [[ "7.0" > "$TRAVIS_PHP_VERSION" ]]; then wget https://phar.phpunit.de/phpunit-5.7.phar --output-document=$HOME/bin/phpunit; fi
# PHP <= 5.5
# - if [[ "5.6" > "$TRAVIS_PHP_VERSION" ]]; then wget https://phar.phpunit.de/phpunit-4.8.phar --output-document=$HOME/bin/phpunit; fi
#^ Considere elif in separate shell file

# SensioLabs Security Checker
- if [[ "5.4" < "$TRAVIS_PHP_VERSION" ]]; then wget http://get.sensiolabs.org/security-checker.phar --output-document=.travis/bin/security-checker; fi

install:
- composer validate
- if [[ -f config/parameters.yml.travis ]]; then cp config/parameters.yml.travis config/parameters.yml; fi
- if [[ -v SYMFONY_VERSION ]]; then composer require symfony/symfony:${SYMFONY_VERSION} --no-scripts --no-progress --no-suggest --optimize-autoloader --apcu-autoloader; fi
- if [[ -v SYMFONY_LTS ]]; then composer require symfony/lts:${SYMFONY_LTS} --no-scripts --no-progress --no-suggest --optimize-autoloader --apcu-autoloader; fi
# - composer install --no-scripts --no-progress --no-suggest
# - composer install --no-progress --no-suggest --optimize-autoloader --apcu-autoloader
- composer show

before_script:

script:
#  php -l main php code
- for f in $(find . -path './vendor' -prune -o -path './tests' -prune -o -name \*.php -print) ; do php -l $f ; done

# php -l test php code
- if true; then for f in $(find ./tests -name \*.php -print); do php -l $f; done; fi

# php-cs-fixer
- if [[ "5.5" < "$TRAVIS_PHP_VERSION" ]]; then php .travis/bin/php-cs-fixer fix --stop-on-violation --diff --dry-run -vvv --using-cache=no; fi

# PHPStan - PHP Static Analysis Tool
- if [[ "5.6" < "$TRAVIS_PHP_VERSION" ]]; then $HOME/.composer/vendor/bin/phpstan analyse --level max *.php tests scripts; fi

# PHPUnit
- if [[ "5.5" < "$TRAVIS_PHP_VERSION" ]]; then PHPUNIT_COVERAGE="--coverage-text --coverage-clover /tmp/coverage.xml"; fi
- if [[ -x ~/bin/phpunit ]]; then php --ini -c /tmp/xdebug.ini; php $xdebug_php ~/.composer/vendor/bin/phpunit --colors=always $PHPUNIT_COVERAGE; fi

# SensioLabs Security Checker
- if [[ "5.4" < "$TRAVIS_PHP_VERSION" ]]; then php .travis/bin/security-checker security:check --end-point=http://security.sensiolabs.org/check_lock; fi
#^ This checks that the application doesn't use dependencies with known security vulnerabilities

- if [[ -v VENDOR_LINT ]]; then for f in $(find ./vendor -name \*.php); do php -l $f > /dev/null; done; fi
#^ Should be the last line of install but sometimes long to execute and little can be done for errors found.

after_success:
- if [[ "5.5" < "$TRAVIS_PHP_VERSION" ]] && [[ "7.3" > "$TRAVIS_PHP_VERSION" ]]; then bash <(curl -s https://codecov.io/bash) -s /tmp; fi

# inspirated from:
  # symfony/symfony-demo
  # https://github.com/doctrine/dbal/blob/v2.5.13/.travis.yml
